-- MySQL Script generated by MySQL Workbench
-- Sun Nov 17 23:17:08 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema themepark_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema themepark_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `themepark_db` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `themepark_db` ;

-- -----------------------------------------------------
-- Table `themepark_db`.`CONCESSION_STALL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`CONCESSION_STALL` (
  `ConcessionID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `OpensAt` TIME NOT NULL,
  `OpenDuration` SMALLINT UNSIGNED NOT NULL,
  `Location` VARCHAR(255) NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `CName` VARCHAR(100) NOT NULL,
  `CDesc` VARCHAR(500) NOT NULL,
  `CPriceMin` SMALLINT UNSIGNED NOT NULL,
  `CPriceMax` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`ConcessionID`))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`CUSTOMER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`CUSTOMER` (
  `CustomerID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `LastName` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `DOB` DATE NOT NULL,
  `Address` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `Email` VARCHAR(255) NOT NULL,
  `Password` VARCHAR(255) NOT NULL,
  `Created` DATE NOT NULL DEFAULT curdate(),
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`CustomerID`),
  UNIQUE INDEX `Email` (`Email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 860
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`EMPLOYEE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`EMPLOYEE` (
  `EmployeeID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(255) NOT NULL,
  `LastName` VARCHAR(255) NOT NULL,
  `DOB` DATE NOT NULL,
  `Address` VARCHAR(255) NOT NULL,
  `PhoneNumber` VARCHAR(255) NOT NULL,
  `Email` VARCHAR(255) NOT NULL,
  `Password` VARCHAR(255) NOT NULL,
  `AccessLevel` VARCHAR(3) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL DEFAULT 'EMP',
  `StartDate` DATE NOT NULL DEFAULT curdate(),
  `EndDate` DATE NOT NULL,
  `Created` DATE NOT NULL DEFAULT curdate(),
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`EmployeeID`),
  UNIQUE INDEX `Email` (`Email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 777
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`EVENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`EVENTS` (
  `EventID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `EventName` VARCHAR(100) NOT NULL,
  `EventType` VARCHAR(100) NOT NULL,
  `EventDateTime` DATETIME(3) NOT NULL,
  `EventDuration` SMALLINT UNSIGNED NOT NULL,
  `EventDesc` VARCHAR(500) NOT NULL,
  `EventRestrictions` VARCHAR(500) NOT NULL,
  `EventAgeLimit` TINYINT UNSIGNED NOT NULL,
  `Location` VARCHAR(255) NOT NULL,
  `Capacity` BIGINT UNSIGNED NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`EventID`))
ENGINE = InnoDB
AUTO_INCREMENT = 37
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`EVENT_TICKET`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`EVENT_TICKET` (
  `EventTicketID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CustomerID` BIGINT UNSIGNED NOT NULL,
  `EventID` BIGINT UNSIGNED NOT NULL,
  `Bought` DATETIME(3) NOT NULL DEFAULT now(),
  `ExpirationDate` DATETIME(3) NOT NULL DEFAULT (now() + interval 14 day),
  `Scanned` DATE NULL DEFAULT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`EventTicketID`),
  UNIQUE INDEX `CustomerID` (`CustomerID` ASC, `EventID` ASC) VISIBLE,
  INDEX `EVENT_TICKET_ibfk_2` (`EventID` ASC) VISIBLE,
  CONSTRAINT `EVENT_TICKET_ibfk_1`
    FOREIGN KEY (`CustomerID`)
    REFERENCES `themepark_db`.`CUSTOMER` (`CustomerID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `EVENT_TICKET_ibfk_2`
    FOREIGN KEY (`EventID`)
    REFERENCES `themepark_db`.`EVENTS` (`EventID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 76
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`GIFTSHOP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`GIFTSHOP` (
  `GiftshopID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `OpensAt` TIME NOT NULL,
  `OpenDuration` SMALLINT UNSIGNED NOT NULL,
  `Location` VARCHAR(255) NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `GName` VARCHAR(100) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `GDesc` VARCHAR(500) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `GPriceMin` SMALLINT UNSIGNED NOT NULL,
  `GPriceMax` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`GiftshopID`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`RIDES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`RIDES` (
  `RideID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `RideName` VARCHAR(255) NOT NULL,
  `Category` VARCHAR(255) NOT NULL,
  `RideAgeLimit` BIGINT NOT NULL,
  `Capacity` BIGINT NOT NULL,
  `Created` DATETIME NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `Functioning` TINYINT(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`RideID`))
ENGINE = InnoDB
AUTO_INCREMENT = 29
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`MAINTENANCE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`MAINTENANCE` (
  `MaintenanceID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `RideID` BIGINT UNSIGNED NOT NULL,
  `Date` DATETIME(3) NOT NULL DEFAULT now(),
  `Description` VARCHAR(1020) NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `Resolved` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`MaintenanceID`),
  INDEX `RideID` (`RideID` ASC) VISIBLE,
  CONSTRAINT `MAINTENANCE_ibfk_1`
    FOREIGN KEY (`RideID`)
    REFERENCES `themepark_db`.`RIDES` (`RideID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 75
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`MEMBERSHIP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`MEMBERSHIP` (
  `MembershipID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `MembershipTier` VARCHAR(255) NOT NULL,
  `ExpiryDate` DATE NOT NULL,
  `PurchaseDate` DATE NOT NULL DEFAULT curdate(),
  `CustomerID` BIGINT UNSIGNED NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`MembershipID`),
  INDEX `CustomerID` (`CustomerID` ASC) VISIBLE,
  CONSTRAINT `MEMBERSHIP_ibfk_1`
    FOREIGN KEY (`CustomerID`)
    REFERENCES `themepark_db`.`CUSTOMER` (`CustomerID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`RIDE_STATUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`RIDE_STATUS` (
  `RideStatusID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `RideID` BIGINT UNSIGNED NOT NULL,
  `WeatherCondition` ENUM('CLEAR', 'DRIZZLE', 'DOWNPOUR', 'WIND', 'TSTORM', 'HURRICANE') CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL DEFAULT 'CLEAR',
  `Status` TINYINT UNSIGNED NOT NULL,
  `Created` DATETIME(3) NOT NULL DEFAULT now(),
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`RideStatusID`),
  UNIQUE INDEX `RideID` (`RideID` ASC, `Created` ASC) VISIBLE,
  CONSTRAINT `RIDE_STATUS_ibfk_1`
    FOREIGN KEY (`RideID`)
    REFERENCES `themepark_db`.`RIDES` (`RideID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 76
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`M_STATUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`M_STATUS` (
  `RideStatusID` BIGINT UNSIGNED NOT NULL,
  `MaintenanceID` BIGINT UNSIGNED NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  INDEX `RideStatusID` (`RideStatusID` ASC) VISIBLE,
  INDEX `MaintenanceID` (`MaintenanceID` ASC) VISIBLE,
  CONSTRAINT `M_STATUS_ibfk_1`
    FOREIGN KEY (`RideStatusID`)
    REFERENCES `themepark_db`.`RIDE_STATUS` (`RideStatusID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `M_STATUS_ibfk_2`
    FOREIGN KEY (`MaintenanceID`)
    REFERENCES `themepark_db`.`MAINTENANCE` (`MaintenanceID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`NOTIFICATIONS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`NOTIFICATIONS` (
  `NotificationID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CustomerID` BIGINT UNSIGNED NOT NULL,
  `Message` VARCHAR(255) NOT NULL,
  `CreatedAt` DATETIME(3) NOT NULL DEFAULT now(),
  `Read` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`NotificationID`),
  INDEX `CustomerID` (`CustomerID` ASC) VISIBLE,
  CONSTRAINT `NOTIFICATIONS_ibfk_1`
    FOREIGN KEY (`CustomerID`)
    REFERENCES `themepark_db`.`CUSTOMER` (`CustomerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`PASSES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`PASSES` (
  `PassID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `PassName` VARCHAR(255) NOT NULL,
  `PassType` VARCHAR(100) NOT NULL,
  `PassStartTime` DATETIME(3) NOT NULL,
  `PassDuration` SMALLINT UNSIGNED NOT NULL,
  `PassDesc` VARCHAR(255) NOT NULL,
  `PassRestrictions` VARCHAR(255) NOT NULL,
  `PassAgeMin` TINYINT UNSIGNED NOT NULL,
  `Location` VARCHAR(255) NOT NULL,
  `Max` BIGINT UNSIGNED NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `PassImg` MEDIUMBLOB NOT NULL,
  PRIMARY KEY (`PassID`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`PASS_TICKET`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`PASS_TICKET` (
  `TicketID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CustomerID` BIGINT UNSIGNED NOT NULL,
  `PassID` BIGINT UNSIGNED NOT NULL,
  `Price` BIGINT NOT NULL DEFAULT '0',
  `ExpirationDate` DATE NOT NULL DEFAULT (now() + interval 90 day),
  `Scanned` DATE NULL DEFAULT NULL,
  `Bought` DATE NOT NULL DEFAULT curdate(),
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`TicketID`),
  INDEX `CustomerID` (`CustomerID` ASC) VISIBLE,
  INDEX `PASS_TICKET_ibfk_2` (`PassID` ASC) VISIBLE,
  CONSTRAINT `PASS_TICKET_ibfk_1`
    FOREIGN KEY (`CustomerID`)
    REFERENCES `themepark_db`.`CUSTOMER` (`CustomerID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `PASS_TICKET_ibfk_2`
    FOREIGN KEY (`PassID`)
    REFERENCES `themepark_db`.`PASSES` (`PassID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 18
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`RESTAURANT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`RESTAURANT` (
  `RestaurantID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `SeatingCapacity` BIGINT UNSIGNED NOT NULL,
  `OpensAt` TIME NOT NULL,
  `OpenDuration` SMALLINT UNSIGNED NOT NULL,
  `Location` VARCHAR(255) NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  `RName` VARCHAR(100) NOT NULL,
  `RDesc` VARCHAR(500) NOT NULL,
  `RPriceMin` SMALLINT UNSIGNED NOT NULL,
  `RPriceMax` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`RestaurantID`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`RUNS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`RUNS` (
  `RunID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `EmployeeID` BIGINT UNSIGNED NOT NULL,
  `RideID` BIGINT UNSIGNED NOT NULL,
  `RideTime` DATETIME NOT NULL,
  `NumofRiders` BIGINT NOT NULL,
  `Deleted` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`RunID`),
  INDEX `EmployeeID` (`EmployeeID` ASC) VISIBLE,
  INDEX `RideID` (`RideID` ASC) VISIBLE,
  CONSTRAINT `RUNS_ibfk_1`
    FOREIGN KEY (`EmployeeID`)
    REFERENCES `themepark_db`.`EMPLOYEE` (`EmployeeID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `RUNS_ibfk_2`
    FOREIGN KEY (`RideID`)
    REFERENCES `themepark_db`.`RIDES` (`RideID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 42
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`SESSIONS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`SESSIONS` (
  `session_id` VARCHAR(128) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_bin' NOT NULL,
  `expires` INT UNSIGNED NOT NULL,
  `data` MEDIUMTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_bin' NULL DEFAULT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`session_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `themepark_db`.`SESSION_SECRETS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`SESSION_SECRETS` (
  `value` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`value`),
  UNIQUE INDEX `value` (`value` ASC, `created` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `themepark_db` ;

-- -----------------------------------------------------
-- Placeholder table for view `themepark_db`.`ATTRACTIONS_LIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`ATTRACTIONS_LIST` (`ID` INT, `Category` INT, `OpensAt` INT, `OpenDuration` INT, `Location` INT, `Name` INT, `Description` INT, `PriceMin` INT, `PriceMax` INT);

-- -----------------------------------------------------
-- Placeholder table for view `themepark_db`.`EVENT_SALES_SUMMARY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`EVENT_SALES_SUMMARY` (`EventID` INT, `EventName` INT, `TotalTickets` INT, `ScannedCount` INT);

-- -----------------------------------------------------
-- Placeholder table for view `themepark_db`.`EVENT_TICKETS_INFO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`EVENT_TICKETS_INFO` (`EventTicketID` INT, `EventID` INT, `EventName` INT, `CustomerName` INT, `Bought` INT, `ExpirationDate` INT, `ScannedDate` INT);

-- -----------------------------------------------------
-- Placeholder table for view `themepark_db`.`RIDE_POPULARITY_INFO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `themepark_db`.`RIDE_POPULARITY_INFO` (`RideTime` INT, `RideID` INT, `RideName` INT, `Category` INT, `OperatorID` INT, `OperatorName` INT, `NumofRiders` INT, `Capacity` INT);

-- -----------------------------------------------------
-- View `themepark_db`.`ATTRACTIONS_LIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `themepark_db`.`ATTRACTIONS_LIST`;
USE `themepark_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`admin`@`%` SQL SECURITY DEFINER VIEW `themepark_db`.`ATTRACTIONS_LIST` AS select `AINFO`.`ID` AS `ID`,`AINFO`.`Category` AS `Category`,`AINFO`.`OpensAt` AS `OpensAt`,`AINFO`.`OpenDuration` AS `OpenDuration`,`AINFO`.`Location` AS `Location`,`AINFO`.`Name` AS `Name`,`AINFO`.`Description` AS `Description`,`AINFO`.`PriceMin` AS `PriceMin`,`AINFO`.`PriceMax` AS `PriceMax` from ((select `r`.`RestaurantID` AS `ID`,'Restaurants' AS `Category`,`r`.`OpensAt` AS `OpensAt`,`r`.`OpenDuration` AS `OpenDuration`,`r`.`Location` AS `Location`,`r`.`RName` AS `Name`,`r`.`RDesc` AS `Description`,`r`.`RPriceMin` AS `PriceMin`,`r`.`RPriceMax` AS `PriceMax` from `themepark_db`.`RESTAURANT` `r` where (`r`.`Deleted` = 0) order by `r`.`RName`) union all (select `g`.`GiftshopID` AS `ID`,'Gift Shops' AS `Category`,`g`.`OpensAt` AS `OpensAt`,`g`.`OpenDuration` AS `OpenDuration`,`g`.`Location` AS `Location`,`g`.`GName` AS `Name`,`g`.`GDesc` AS `Description`,`g`.`GPriceMin` AS `PriceMin`,`g`.`GPriceMax` AS `PriceMax` from `themepark_db`.`GIFTSHOP` `g` where (`g`.`Deleted` = 0) order by `g`.`GName`) union all (select `c`.`ConcessionID` AS `ID`,'Concession Stands' AS `Category`,`c`.`OpensAt` AS `OpensAt`,`c`.`OpenDuration` AS `OpenDuration`,`c`.`Location` AS `Location`,`c`.`CName` AS `Name`,`c`.`CDesc` AS `Description`,`c`.`CPriceMin` AS `PriceMin`,`c`.`CPriceMax` AS `PriceMax` from `themepark_db`.`CONCESSION_STALL` `c` where (`c`.`Deleted` = 0) order by `c`.`CName`)) `AINFO`;

-- -----------------------------------------------------
-- View `themepark_db`.`EVENT_SALES_SUMMARY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `themepark_db`.`EVENT_SALES_SUMMARY`;
USE `themepark_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `themepark_db`.`EVENT_SALES_SUMMARY` AS select `e`.`EventID` AS `EventID`,`e`.`EventName` AS `EventName`,concat(count((case when ((`et`.`EventTicketID` is not null) and (`et`.`Deleted` <> 1)) then 1 end)),' of ',`e`.`Capacity`) AS `TotalTickets`,count((case when ((`et`.`Scanned` is not null) and (`et`.`Deleted` <> 1)) then 1 end)) AS `ScannedCount` from (`themepark_db`.`EVENTS` `e` left join `themepark_db`.`EVENT_TICKET` `et` on((`et`.`EventID` = `e`.`EventID`))) group by `e`.`EventID` order by `e`.`EventID`;

-- -----------------------------------------------------
-- View `themepark_db`.`EVENT_TICKETS_INFO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `themepark_db`.`EVENT_TICKETS_INFO`;
USE `themepark_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `themepark_db`.`EVENT_TICKETS_INFO` AS select `et`.`EventTicketID` AS `EventTicketID`,`e`.`EventID` AS `EventID`,`e`.`EventName` AS `EventName`,if((`c`.`FirstName` is null),'DELETED',concat(`c`.`FirstName`,' ',`c`.`LastName`)) AS `CustomerName`,`et`.`Bought` AS `Bought`,`et`.`ExpirationDate` AS `ExpirationDate`,if((`et`.`Scanned` is null),'N/A',`et`.`Scanned`) AS `ScannedDate` from ((`themepark_db`.`EVENT_TICKET` `et` join `themepark_db`.`EVENTS` `e` on((`e`.`EventID` = `et`.`EventID`))) left join `themepark_db`.`CUSTOMER` `c` on((`c`.`CustomerID` = `et`.`CustomerID`))) where (`et`.`Deleted` = 0) order by `et`.`EventTicketID`;

-- -----------------------------------------------------
-- View `themepark_db`.`RIDE_POPULARITY_INFO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `themepark_db`.`RIDE_POPULARITY_INFO`;
USE `themepark_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `themepark_db`.`RIDE_POPULARITY_INFO` AS select `ru`.`RideTime` AS `RideTime`,`ri`.`RideID` AS `RideID`,`ri`.`RideName` AS `RideName`,`ri`.`Category` AS `Category`,`e`.`EmployeeID` AS `OperatorID`,concat(`e`.`FirstName`,concat(' ',`e`.`LastName`)) AS `OperatorName`,`ru`.`NumofRiders` AS `NumofRiders`,`ri`.`Capacity` AS `Capacity` from ((`themepark_db`.`RUNS` `ru` join `themepark_db`.`EMPLOYEE` `e`) join `themepark_db`.`RIDES` `ri`) where ((`ru`.`EmployeeID` = `e`.`EmployeeID`) and (`ru`.`RideID` = `ri`.`RideID`));
USE `themepark_db`;

DELIMITER $$
USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`before_event_delete`
BEFORE DELETE ON `themepark_db`.`EVENTS`
FOR EACH ROW
BEGIN
  -- Insert notifications for customers of the event before cascading deletion
  INSERT INTO `NOTIFICATIONS` (`CustomerID`, `Message`)
  SELECT `CustomerID`, 
         CONCAT('The event "', OLD.EventName, '" scheduled on ', 
         DATE_FORMAT(OLD.EventDateTime, '%Y-%m-%d %H:%i:%s'), 
         ' has been cancelled. We apologize for the inconvenience.')
  FROM `EVENT_TICKET`
  WHERE `EventID` = OLD.EventID;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`before_event_soft_delete`
BEFORE UPDATE ON `themepark_db`.`EVENTS`
FOR EACH ROW
BEGIN
  -- Check if the `Deleted` flag is being set to 1
  IF OLD.Deleted = 0 AND NEW.Deleted = 1 THEN
    -- Insert notifications for customers of the event
    INSERT INTO `NOTIFICATIONS` (`CustomerID`, `Message`)
    SELECT `CustomerID`, 
           CONCAT('The event "', OLD.EventName, '" scheduled on ', 
           DATE_FORMAT(OLD.EventDateTime, '%Y-%m-%d %H:%i:%s'), 
           ' has been cancelled. We apologize for the inconvenience.')
    FROM `EVENT_TICKET`
    WHERE `EventID` = OLD.EventID;

    -- Mark associated event tickets as deleted
    UPDATE `EVENT_TICKET`
    SET `Deleted` = 1
    WHERE `EventID` = OLD.EventID;
  END IF;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`check_event_capacity`
BEFORE INSERT ON `themepark_db`.`EVENT_TICKET`
FOR EACH ROW
BEGIN
    DECLARE current_count INT;

    -- Count current registrations for the event
    SELECT COUNT(*) INTO current_count
    FROM EVENT_TICKET
    WHERE EventID = NEW.EventID;

    -- Check if the capacity has been reached
    IF current_count >= (SELECT Capacity FROM EVENTS WHERE EventID = NEW.EventID) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Sorry, we are currently at maximum capacity for the event. Please check back at a later time!';
    END IF;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`update_functioning_status`
AFTER INSERT ON `themepark_db`.`RIDE_STATUS`
FOR EACH ROW
BEGIN
    IF NEW.Status = 0 THEN
        UPDATE RIDES
        SET Functioning = 0
        WHERE RideID = NEW.RideID;
    ELSEIF NEW.Status = 1 THEN
        UPDATE RIDES
        SET Functioning = 1
        WHERE RideID = NEW.RideID;
    END IF;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`update_functioning_status_on_update`
AFTER UPDATE ON `themepark_db`.`RIDE_STATUS`
FOR EACH ROW
BEGIN
    -- Check if the new status is 'in maintenance' or 'operational'
    IF NEW.Status = 0 THEN
        UPDATE RIDES
        SET Functioning = 0
        WHERE RideID = NEW.RideID;
    ELSEIF NEW.Status = 1 THEN
        UPDATE RIDES
        SET Functioning = 1
        WHERE RideID = NEW.RideID;
    END IF;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`check_pass_max`
BEFORE INSERT ON `themepark_db`.`PASS_TICKET`
FOR EACH ROW
BEGIN
    DECLARE current_count INT;

    -- Count current purchasaes for the Pass
    SELECT COUNT(*) INTO current_count
    FROM PASS_TICKET
    WHERE PassID = NEW.PassID;

    -- Check if the capacity has been reached
    IF current_count >= (SELECT Max FROM PASSES WHERE PassID = NEW.PassID) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'We are currently out for the season, check again later!';
    END IF;
END$$

USE `themepark_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `themepark_db`.`before_insert_runs`
BEFORE INSERT ON `themepark_db`.`RUNS`
FOR EACH ROW
BEGIN
    -- Check if the ride has been marked "out of order" in the last 24 hours
    IF EXISTS (
        SELECT 1
        FROM RIDE_STATUS RS1
        WHERE RS1.RideID = NEW.RideID
          AND RS1.Status = 0 -- Out of order
          AND RS1.Created >= NOW() - INTERVAL 1 DAY
          AND NOT EXISTS (
              -- Ensure no fixed logs exist after the out-of-order record
              SELECT 1
              FROM RIDE_STATUS RS2
              WHERE RS2.RideID = RS1.RideID
                AND RS2.Status != 0 -- Fixed or other status
                AND RS2.Created > RS1.Created
          )
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'This ride cannot be operated, it is under maintenance. Please check back at a later time!';
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
